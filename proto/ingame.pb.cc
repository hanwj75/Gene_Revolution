// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: ingame.proto
// Protobuf C++ Version: 5.29.5

#include "ingame.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace ingame {

inline constexpr S2C_PlayerMove::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        x_{0},
        y_{0},
        dir_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_PlayerMove::S2C_PlayerMove(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_PlayerMoveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_PlayerMoveDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_PlayerMoveDefaultTypeInternal() {}
  union {
    S2C_PlayerMove _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_PlayerMoveDefaultTypeInternal _S2C_PlayerMove_default_instance_;

inline constexpr S2C_PlayerAttack::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        attack_type_{0},
        hit_{false},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_PlayerAttack::S2C_PlayerAttack(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_PlayerAttackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_PlayerAttackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_PlayerAttackDefaultTypeInternal() {}
  union {
    S2C_PlayerAttack _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_PlayerAttackDefaultTypeInternal _S2C_PlayerAttack_default_instance_;

inline constexpr S2C_GameState_PlayerState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        x_{0},
        y_{0},
        dir_{0},
        hp_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_GameState_PlayerState::S2C_GameState_PlayerState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_GameState_PlayerStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_GameState_PlayerStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_GameState_PlayerStateDefaultTypeInternal() {}
  union {
    S2C_GameState_PlayerState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_GameState_PlayerStateDefaultTypeInternal _S2C_GameState_PlayerState_default_instance_;

inline constexpr C2S_PlayerMove::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        x_{0},
        y_{0},
        dir_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_PlayerMove::C2S_PlayerMove(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_PlayerMoveDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_PlayerMoveDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_PlayerMoveDefaultTypeInternal() {}
  union {
    C2S_PlayerMove _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_PlayerMoveDefaultTypeInternal _C2S_PlayerMove_default_instance_;

inline constexpr C2S_PlayerAttack::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : user_id_(
            &::google::protobuf::internal::fixed_address_empty_string,
            ::_pbi::ConstantInitialized()),
        attack_type_{0},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR C2S_PlayerAttack::C2S_PlayerAttack(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct C2S_PlayerAttackDefaultTypeInternal {
  PROTOBUF_CONSTEXPR C2S_PlayerAttackDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~C2S_PlayerAttackDefaultTypeInternal() {}
  union {
    C2S_PlayerAttack _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 C2S_PlayerAttackDefaultTypeInternal _C2S_PlayerAttack_default_instance_;

inline constexpr S2C_GameState::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : players_{},
        _cached_size_{0} {}

template <typename>
PROTOBUF_CONSTEXPR S2C_GameState::S2C_GameState(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct S2C_GameStateDefaultTypeInternal {
  PROTOBUF_CONSTEXPR S2C_GameStateDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~S2C_GameStateDefaultTypeInternal() {}
  union {
    S2C_GameState _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 S2C_GameStateDefaultTypeInternal _S2C_GameState_default_instance_;
}  // namespace ingame
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_ingame_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_ingame_2eproto = nullptr;
const ::uint32_t
    TableStruct_ingame_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ingame::C2S_PlayerMove, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ingame::C2S_PlayerMove, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::ingame::C2S_PlayerMove, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::ingame::C2S_PlayerMove, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::ingame::C2S_PlayerMove, _impl_.dir_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_PlayerMove, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_PlayerMove, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_PlayerMove, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_PlayerMove, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_PlayerMove, _impl_.dir_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ingame::C2S_PlayerAttack, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ingame::C2S_PlayerAttack, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::ingame::C2S_PlayerAttack, _impl_.attack_type_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_PlayerAttack, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_PlayerAttack, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_PlayerAttack, _impl_.attack_type_),
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_PlayerAttack, _impl_.hit_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_GameState_PlayerState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_GameState_PlayerState, _impl_.user_id_),
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_GameState_PlayerState, _impl_.x_),
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_GameState_PlayerState, _impl_.y_),
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_GameState_PlayerState, _impl_.dir_),
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_GameState_PlayerState, _impl_.hp_),
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_GameState, _internal_metadata_),
        ~0u,  // no _extensions_
        ~0u,  // no _oneof_case_
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        PROTOBUF_FIELD_OFFSET(::ingame::S2C_GameState, _impl_.players_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::ingame::C2S_PlayerMove)},
        {12, -1, -1, sizeof(::ingame::S2C_PlayerMove)},
        {24, -1, -1, sizeof(::ingame::C2S_PlayerAttack)},
        {34, -1, -1, sizeof(::ingame::S2C_PlayerAttack)},
        {45, -1, -1, sizeof(::ingame::S2C_GameState_PlayerState)},
        {58, -1, -1, sizeof(::ingame::S2C_GameState)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::ingame::_C2S_PlayerMove_default_instance_._instance,
    &::ingame::_S2C_PlayerMove_default_instance_._instance,
    &::ingame::_C2S_PlayerAttack_default_instance_._instance,
    &::ingame::_S2C_PlayerAttack_default_instance_._instance,
    &::ingame::_S2C_GameState_PlayerState_default_instance_._instance,
    &::ingame::_S2C_GameState_default_instance_._instance,
};
const char descriptor_table_protodef_ingame_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014ingame.proto\022\006ingame\"D\n\016C2S_PlayerMove"
    "\022\017\n\007user_id\030\001 \001(\t\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022"
    "\013\n\003dir\030\004 \001(\002\"D\n\016S2C_PlayerMove\022\017\n\007user_i"
    "d\030\001 \001(\t\022\t\n\001x\030\002 \001(\002\022\t\n\001y\030\003 \001(\002\022\013\n\003dir\030\004 \001"
    "(\002\"8\n\020C2S_PlayerAttack\022\017\n\007user_id\030\001 \001(\t\022"
    "\023\n\013attack_type\030\002 \001(\005\"E\n\020S2C_PlayerAttack"
    "\022\017\n\007user_id\030\001 \001(\t\022\023\n\013attack_type\030\002 \001(\005\022\013"
    "\n\003hit\030\003 \001(\010\"\222\001\n\rS2C_GameState\0222\n\007players"
    "\030\001 \003(\0132!.ingame.S2C_GameState.PlayerStat"
    "e\032M\n\013PlayerState\022\017\n\007user_id\030\001 \001(\t\022\t\n\001x\030\002"
    " \001(\002\022\t\n\001y\030\003 \001(\002\022\013\n\003dir\030\004 \001(\002\022\n\n\002hp\030\005 \001(\005"
    "b\006proto3"
};
static ::absl::once_flag descriptor_table_ingame_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_ingame_2eproto = {
    false,
    false,
    448,
    descriptor_table_protodef_ingame_2eproto,
    "ingame.proto",
    &descriptor_table_ingame_2eproto_once,
    nullptr,
    0,
    6,
    schemas,
    file_default_instances,
    TableStruct_ingame_2eproto::offsets,
    file_level_enum_descriptors_ingame_2eproto,
    file_level_service_descriptors_ingame_2eproto,
};
namespace ingame {
// ===================================================================

class C2S_PlayerMove::_Internal {
 public:
};

C2S_PlayerMove::C2S_PlayerMove(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ingame.C2S_PlayerMove)
}
inline PROTOBUF_NDEBUG_INLINE C2S_PlayerMove::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ingame::C2S_PlayerMove& from_msg)
      : user_id_(arena, from.user_id_),
        _cached_size_{0} {}

C2S_PlayerMove::C2S_PlayerMove(
    ::google::protobuf::Arena* arena,
    const C2S_PlayerMove& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_PlayerMove* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, x_),
           offsetof(Impl_, dir_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::dir_));

  // @@protoc_insertion_point(copy_constructor:ingame.C2S_PlayerMove)
}
inline PROTOBUF_NDEBUG_INLINE C2S_PlayerMove::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        _cached_size_{0} {}

inline void C2S_PlayerMove::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, dir_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::dir_));
}
C2S_PlayerMove::~C2S_PlayerMove() {
  // @@protoc_insertion_point(destructor:ingame.C2S_PlayerMove)
  SharedDtor(*this);
}
inline void C2S_PlayerMove::SharedDtor(MessageLite& self) {
  C2S_PlayerMove& this_ = static_cast<C2S_PlayerMove&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* C2S_PlayerMove::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) C2S_PlayerMove(arena);
}
constexpr auto C2S_PlayerMove::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(C2S_PlayerMove),
                                            alignof(C2S_PlayerMove));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull C2S_PlayerMove::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_C2S_PlayerMove_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &C2S_PlayerMove::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<C2S_PlayerMove>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &C2S_PlayerMove::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<C2S_PlayerMove>(), &C2S_PlayerMove::ByteSizeLong,
            &C2S_PlayerMove::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(C2S_PlayerMove, _impl_._cached_size_),
        false,
    },
    &C2S_PlayerMove::kDescriptorMethods,
    &descriptor_table_ingame_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* C2S_PlayerMove::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 37, 2> C2S_PlayerMove::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ingame::C2S_PlayerMove>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float dir = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_PlayerMove, _impl_.dir_)}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_PlayerMove, _impl_.user_id_)}},
    // float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_PlayerMove, _impl_.x_)}},
    // float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_PlayerMove, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_PlayerMove, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float x = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_PlayerMove, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 3;
    {PROTOBUF_FIELD_OFFSET(C2S_PlayerMove, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float dir = 4;
    {PROTOBUF_FIELD_OFFSET(C2S_PlayerMove, _impl_.dir_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\25\7\0\0\0\0\0\0"
    "ingame.C2S_PlayerMove"
    "user_id"
  }},
};

PROTOBUF_NOINLINE void C2S_PlayerMove::Clear() {
// @@protoc_insertion_point(message_clear_start:ingame.C2S_PlayerMove)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dir_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.dir_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_PlayerMove::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_PlayerMove& this_ = static_cast<const C2S_PlayerMove&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_PlayerMove::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_PlayerMove& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ingame.C2S_PlayerMove)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ingame.C2S_PlayerMove.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // float x = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_x(), target);
          }

          // float y = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_y(), target);
          }

          // float dir = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_dir()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_dir(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ingame.C2S_PlayerMove)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_PlayerMove::ByteSizeLong(const MessageLite& base) {
          const C2S_PlayerMove& this_ = static_cast<const C2S_PlayerMove&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_PlayerMove::ByteSizeLong() const {
          const C2S_PlayerMove& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ingame.C2S_PlayerMove)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // float x = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float dir = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_dir()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_PlayerMove::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_PlayerMove*>(&to_msg);
  auto& from = static_cast<const C2S_PlayerMove&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ingame.C2S_PlayerMove)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_dir()) != 0) {
    _this->_impl_.dir_ = from._impl_.dir_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_PlayerMove::CopyFrom(const C2S_PlayerMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ingame.C2S_PlayerMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_PlayerMove::InternalSwap(C2S_PlayerMove* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(C2S_PlayerMove, _impl_.dir_)
      + sizeof(C2S_PlayerMove::_impl_.dir_)
      - PROTOBUF_FIELD_OFFSET(C2S_PlayerMove, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata C2S_PlayerMove::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_PlayerMove::_Internal {
 public:
};

S2C_PlayerMove::S2C_PlayerMove(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ingame.S2C_PlayerMove)
}
inline PROTOBUF_NDEBUG_INLINE S2C_PlayerMove::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ingame::S2C_PlayerMove& from_msg)
      : user_id_(arena, from.user_id_),
        _cached_size_{0} {}

S2C_PlayerMove::S2C_PlayerMove(
    ::google::protobuf::Arena* arena,
    const S2C_PlayerMove& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_PlayerMove* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, x_),
           offsetof(Impl_, dir_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::dir_));

  // @@protoc_insertion_point(copy_constructor:ingame.S2C_PlayerMove)
}
inline PROTOBUF_NDEBUG_INLINE S2C_PlayerMove::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        _cached_size_{0} {}

inline void S2C_PlayerMove::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, dir_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::dir_));
}
S2C_PlayerMove::~S2C_PlayerMove() {
  // @@protoc_insertion_point(destructor:ingame.S2C_PlayerMove)
  SharedDtor(*this);
}
inline void S2C_PlayerMove::SharedDtor(MessageLite& self) {
  S2C_PlayerMove& this_ = static_cast<S2C_PlayerMove&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* S2C_PlayerMove::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) S2C_PlayerMove(arena);
}
constexpr auto S2C_PlayerMove::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(S2C_PlayerMove),
                                            alignof(S2C_PlayerMove));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull S2C_PlayerMove::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_S2C_PlayerMove_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &S2C_PlayerMove::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<S2C_PlayerMove>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &S2C_PlayerMove::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<S2C_PlayerMove>(), &S2C_PlayerMove::ByteSizeLong,
            &S2C_PlayerMove::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(S2C_PlayerMove, _impl_._cached_size_),
        false,
    },
    &S2C_PlayerMove::kDescriptorMethods,
    &descriptor_table_ingame_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* S2C_PlayerMove::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 4, 0, 37, 2> S2C_PlayerMove::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    4, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967280,  // skipmap
    offsetof(decltype(_table_), field_entries),
    4,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ingame::S2C_PlayerMove>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // float dir = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_PlayerMove, _impl_.dir_)}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_PlayerMove, _impl_.user_id_)}},
    // float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_PlayerMove, _impl_.x_)}},
    // float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_PlayerMove, _impl_.y_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_PlayerMove, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float x = 2;
    {PROTOBUF_FIELD_OFFSET(S2C_PlayerMove, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 3;
    {PROTOBUF_FIELD_OFFSET(S2C_PlayerMove, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float dir = 4;
    {PROTOBUF_FIELD_OFFSET(S2C_PlayerMove, _impl_.dir_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
  }},
  // no aux_entries
  {{
    "\25\7\0\0\0\0\0\0"
    "ingame.S2C_PlayerMove"
    "user_id"
  }},
};

PROTOBUF_NOINLINE void S2C_PlayerMove::Clear() {
// @@protoc_insertion_point(message_clear_start:ingame.S2C_PlayerMove)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.dir_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.dir_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_PlayerMove::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_PlayerMove& this_ = static_cast<const S2C_PlayerMove&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_PlayerMove::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_PlayerMove& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ingame.S2C_PlayerMove)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ingame.S2C_PlayerMove.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // float x = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_x(), target);
          }

          // float y = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_y(), target);
          }

          // float dir = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_dir()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_dir(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ingame.S2C_PlayerMove)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_PlayerMove::ByteSizeLong(const MessageLite& base) {
          const S2C_PlayerMove& this_ = static_cast<const S2C_PlayerMove&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_PlayerMove::ByteSizeLong() const {
          const S2C_PlayerMove& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ingame.S2C_PlayerMove)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // float x = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float dir = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_dir()) != 0) {
              total_size += 5;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_PlayerMove::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_PlayerMove*>(&to_msg);
  auto& from = static_cast<const S2C_PlayerMove&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ingame.S2C_PlayerMove)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_dir()) != 0) {
    _this->_impl_.dir_ = from._impl_.dir_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_PlayerMove::CopyFrom(const S2C_PlayerMove& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ingame.S2C_PlayerMove)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_PlayerMove::InternalSwap(S2C_PlayerMove* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_PlayerMove, _impl_.dir_)
      + sizeof(S2C_PlayerMove::_impl_.dir_)
      - PROTOBUF_FIELD_OFFSET(S2C_PlayerMove, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata S2C_PlayerMove::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class C2S_PlayerAttack::_Internal {
 public:
};

C2S_PlayerAttack::C2S_PlayerAttack(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ingame.C2S_PlayerAttack)
}
inline PROTOBUF_NDEBUG_INLINE C2S_PlayerAttack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ingame::C2S_PlayerAttack& from_msg)
      : user_id_(arena, from.user_id_),
        _cached_size_{0} {}

C2S_PlayerAttack::C2S_PlayerAttack(
    ::google::protobuf::Arena* arena,
    const C2S_PlayerAttack& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  C2S_PlayerAttack* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  _impl_.attack_type_ = from._impl_.attack_type_;

  // @@protoc_insertion_point(copy_constructor:ingame.C2S_PlayerAttack)
}
inline PROTOBUF_NDEBUG_INLINE C2S_PlayerAttack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        _cached_size_{0} {}

inline void C2S_PlayerAttack::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  _impl_.attack_type_ = {};
}
C2S_PlayerAttack::~C2S_PlayerAttack() {
  // @@protoc_insertion_point(destructor:ingame.C2S_PlayerAttack)
  SharedDtor(*this);
}
inline void C2S_PlayerAttack::SharedDtor(MessageLite& self) {
  C2S_PlayerAttack& this_ = static_cast<C2S_PlayerAttack&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* C2S_PlayerAttack::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) C2S_PlayerAttack(arena);
}
constexpr auto C2S_PlayerAttack::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(C2S_PlayerAttack),
                                            alignof(C2S_PlayerAttack));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull C2S_PlayerAttack::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_C2S_PlayerAttack_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &C2S_PlayerAttack::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<C2S_PlayerAttack>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &C2S_PlayerAttack::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<C2S_PlayerAttack>(), &C2S_PlayerAttack::ByteSizeLong,
            &C2S_PlayerAttack::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(C2S_PlayerAttack, _impl_._cached_size_),
        false,
    },
    &C2S_PlayerAttack::kDescriptorMethods,
    &descriptor_table_ingame_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* C2S_PlayerAttack::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<1, 2, 0, 39, 2> C2S_PlayerAttack::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    2, 8,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967292,  // skipmap
    offsetof(decltype(_table_), field_entries),
    2,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ingame::C2S_PlayerAttack>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // int32 attack_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(C2S_PlayerAttack, _impl_.attack_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_PlayerAttack, _impl_.attack_type_)}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(C2S_PlayerAttack, _impl_.user_id_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(C2S_PlayerAttack, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 attack_type = 2;
    {PROTOBUF_FIELD_OFFSET(C2S_PlayerAttack, _impl_.attack_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\27\7\0\0\0\0\0\0"
    "ingame.C2S_PlayerAttack"
    "user_id"
  }},
};

PROTOBUF_NOINLINE void C2S_PlayerAttack::Clear() {
// @@protoc_insertion_point(message_clear_start:ingame.C2S_PlayerAttack)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  _impl_.attack_type_ = 0;
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* C2S_PlayerAttack::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const C2S_PlayerAttack& this_ = static_cast<const C2S_PlayerAttack&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* C2S_PlayerAttack::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const C2S_PlayerAttack& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ingame.C2S_PlayerAttack)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ingame.C2S_PlayerAttack.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 attack_type = 2;
          if (this_._internal_attack_type() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_attack_type(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ingame.C2S_PlayerAttack)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t C2S_PlayerAttack::ByteSizeLong(const MessageLite& base) {
          const C2S_PlayerAttack& this_ = static_cast<const C2S_PlayerAttack&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t C2S_PlayerAttack::ByteSizeLong() const {
          const C2S_PlayerAttack& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ingame.C2S_PlayerAttack)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // int32 attack_type = 2;
            if (this_._internal_attack_type() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_attack_type());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void C2S_PlayerAttack::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<C2S_PlayerAttack*>(&to_msg);
  auto& from = static_cast<const C2S_PlayerAttack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ingame.C2S_PlayerAttack)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_attack_type() != 0) {
    _this->_impl_.attack_type_ = from._impl_.attack_type_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void C2S_PlayerAttack::CopyFrom(const C2S_PlayerAttack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ingame.C2S_PlayerAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void C2S_PlayerAttack::InternalSwap(C2S_PlayerAttack* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
        swap(_impl_.attack_type_, other->_impl_.attack_type_);
}

::google::protobuf::Metadata C2S_PlayerAttack::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_PlayerAttack::_Internal {
 public:
};

S2C_PlayerAttack::S2C_PlayerAttack(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ingame.S2C_PlayerAttack)
}
inline PROTOBUF_NDEBUG_INLINE S2C_PlayerAttack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ingame::S2C_PlayerAttack& from_msg)
      : user_id_(arena, from.user_id_),
        _cached_size_{0} {}

S2C_PlayerAttack::S2C_PlayerAttack(
    ::google::protobuf::Arena* arena,
    const S2C_PlayerAttack& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_PlayerAttack* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attack_type_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, attack_type_),
           offsetof(Impl_, hit_) -
               offsetof(Impl_, attack_type_) +
               sizeof(Impl_::hit_));

  // @@protoc_insertion_point(copy_constructor:ingame.S2C_PlayerAttack)
}
inline PROTOBUF_NDEBUG_INLINE S2C_PlayerAttack::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        _cached_size_{0} {}

inline void S2C_PlayerAttack::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, attack_type_),
           0,
           offsetof(Impl_, hit_) -
               offsetof(Impl_, attack_type_) +
               sizeof(Impl_::hit_));
}
S2C_PlayerAttack::~S2C_PlayerAttack() {
  // @@protoc_insertion_point(destructor:ingame.S2C_PlayerAttack)
  SharedDtor(*this);
}
inline void S2C_PlayerAttack::SharedDtor(MessageLite& self) {
  S2C_PlayerAttack& this_ = static_cast<S2C_PlayerAttack&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* S2C_PlayerAttack::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) S2C_PlayerAttack(arena);
}
constexpr auto S2C_PlayerAttack::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(S2C_PlayerAttack),
                                            alignof(S2C_PlayerAttack));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull S2C_PlayerAttack::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_S2C_PlayerAttack_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &S2C_PlayerAttack::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<S2C_PlayerAttack>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &S2C_PlayerAttack::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<S2C_PlayerAttack>(), &S2C_PlayerAttack::ByteSizeLong,
            &S2C_PlayerAttack::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(S2C_PlayerAttack, _impl_._cached_size_),
        false,
    },
    &S2C_PlayerAttack::kDescriptorMethods,
    &descriptor_table_ingame_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* S2C_PlayerAttack::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<2, 3, 0, 39, 2> S2C_PlayerAttack::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    3, 24,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967288,  // skipmap
    offsetof(decltype(_table_), field_entries),
    3,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ingame::S2C_PlayerAttack>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_PlayerAttack, _impl_.user_id_)}},
    // int32 attack_type = 2;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_PlayerAttack, _impl_.attack_type_), 63>(),
     {16, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_PlayerAttack, _impl_.attack_type_)}},
    // bool hit = 3;
    {::_pbi::TcParser::SingularVarintNoZag1<bool, offsetof(S2C_PlayerAttack, _impl_.hit_), 63>(),
     {24, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_PlayerAttack, _impl_.hit_)}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_PlayerAttack, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // int32 attack_type = 2;
    {PROTOBUF_FIELD_OFFSET(S2C_PlayerAttack, _impl_.attack_type_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
    // bool hit = 3;
    {PROTOBUF_FIELD_OFFSET(S2C_PlayerAttack, _impl_.hit_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kBool)},
  }},
  // no aux_entries
  {{
    "\27\7\0\0\0\0\0\0"
    "ingame.S2C_PlayerAttack"
    "user_id"
  }},
};

PROTOBUF_NOINLINE void S2C_PlayerAttack::Clear() {
// @@protoc_insertion_point(message_clear_start:ingame.S2C_PlayerAttack)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  ::memset(&_impl_.attack_type_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.hit_) -
      reinterpret_cast<char*>(&_impl_.attack_type_)) + sizeof(_impl_.hit_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_PlayerAttack::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_PlayerAttack& this_ = static_cast<const S2C_PlayerAttack&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_PlayerAttack::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_PlayerAttack& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ingame.S2C_PlayerAttack)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ingame.S2C_PlayerAttack.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // int32 attack_type = 2;
          if (this_._internal_attack_type() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<2>(
                    stream, this_._internal_attack_type(), target);
          }

          // bool hit = 3;
          if (this_._internal_hit() != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteBoolToArray(
                3, this_._internal_hit(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ingame.S2C_PlayerAttack)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_PlayerAttack::ByteSizeLong(const MessageLite& base) {
          const S2C_PlayerAttack& this_ = static_cast<const S2C_PlayerAttack&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_PlayerAttack::ByteSizeLong() const {
          const S2C_PlayerAttack& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ingame.S2C_PlayerAttack)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // int32 attack_type = 2;
            if (this_._internal_attack_type() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_attack_type());
            }
            // bool hit = 3;
            if (this_._internal_hit() != 0) {
              total_size += 2;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_PlayerAttack::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_PlayerAttack*>(&to_msg);
  auto& from = static_cast<const S2C_PlayerAttack&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ingame.S2C_PlayerAttack)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (from._internal_attack_type() != 0) {
    _this->_impl_.attack_type_ = from._impl_.attack_type_;
  }
  if (from._internal_hit() != 0) {
    _this->_impl_.hit_ = from._impl_.hit_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_PlayerAttack::CopyFrom(const S2C_PlayerAttack& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ingame.S2C_PlayerAttack)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_PlayerAttack::InternalSwap(S2C_PlayerAttack* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_PlayerAttack, _impl_.hit_)
      + sizeof(S2C_PlayerAttack::_impl_.hit_)
      - PROTOBUF_FIELD_OFFSET(S2C_PlayerAttack, _impl_.attack_type_)>(
          reinterpret_cast<char*>(&_impl_.attack_type_),
          reinterpret_cast<char*>(&other->_impl_.attack_type_));
}

::google::protobuf::Metadata S2C_PlayerAttack::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_GameState_PlayerState::_Internal {
 public:
};

S2C_GameState_PlayerState::S2C_GameState_PlayerState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ingame.S2C_GameState.PlayerState)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameState_PlayerState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ingame::S2C_GameState_PlayerState& from_msg)
      : user_id_(arena, from.user_id_),
        _cached_size_{0} {}

S2C_GameState_PlayerState::S2C_GameState_PlayerState(
    ::google::protobuf::Arena* arena,
    const S2C_GameState_PlayerState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_GameState_PlayerState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  ::memcpy(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           reinterpret_cast<const char *>(&from._impl_) +
               offsetof(Impl_, x_),
           offsetof(Impl_, hp_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::hp_));

  // @@protoc_insertion_point(copy_constructor:ingame.S2C_GameState.PlayerState)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameState_PlayerState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : user_id_(arena),
        _cached_size_{0} {}

inline void S2C_GameState_PlayerState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
  ::memset(reinterpret_cast<char *>(&_impl_) +
               offsetof(Impl_, x_),
           0,
           offsetof(Impl_, hp_) -
               offsetof(Impl_, x_) +
               sizeof(Impl_::hp_));
}
S2C_GameState_PlayerState::~S2C_GameState_PlayerState() {
  // @@protoc_insertion_point(destructor:ingame.S2C_GameState.PlayerState)
  SharedDtor(*this);
}
inline void S2C_GameState_PlayerState::SharedDtor(MessageLite& self) {
  S2C_GameState_PlayerState& this_ = static_cast<S2C_GameState_PlayerState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.user_id_.Destroy();
  this_._impl_.~Impl_();
}

inline void* S2C_GameState_PlayerState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) S2C_GameState_PlayerState(arena);
}
constexpr auto S2C_GameState_PlayerState::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::CopyInit(sizeof(S2C_GameState_PlayerState),
                                            alignof(S2C_GameState_PlayerState));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull S2C_GameState_PlayerState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_S2C_GameState_PlayerState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &S2C_GameState_PlayerState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<S2C_GameState_PlayerState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &S2C_GameState_PlayerState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<S2C_GameState_PlayerState>(), &S2C_GameState_PlayerState::ByteSizeLong,
            &S2C_GameState_PlayerState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_._cached_size_),
        false,
    },
    &S2C_GameState_PlayerState::kDescriptorMethods,
    &descriptor_table_ingame_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* S2C_GameState_PlayerState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<3, 5, 0, 48, 2> S2C_GameState_PlayerState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    5, 56,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967264,  // skipmap
    offsetof(decltype(_table_), field_entries),
    5,  // num_field_entries
    0,  // num_aux_entries
    offsetof(decltype(_table_), field_names),  // no aux_entries
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ingame::S2C_GameState_PlayerState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
    // string user_id = 1;
    {::_pbi::TcParser::FastUS1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_.user_id_)}},
    // float x = 2;
    {::_pbi::TcParser::FastF32S1,
     {21, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_.x_)}},
    // float y = 3;
    {::_pbi::TcParser::FastF32S1,
     {29, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_.y_)}},
    // float dir = 4;
    {::_pbi::TcParser::FastF32S1,
     {37, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_.dir_)}},
    // int32 hp = 5;
    {::_pbi::TcParser::SingularVarintNoZag1<::uint32_t, offsetof(S2C_GameState_PlayerState, _impl_.hp_), 63>(),
     {40, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_.hp_)}},
    {::_pbi::TcParser::MiniParse, {}},
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // string user_id = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_.user_id_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kUtf8String | ::_fl::kRepAString)},
    // float x = 2;
    {PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_.x_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float y = 3;
    {PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_.y_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // float dir = 4;
    {PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_.dir_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kFloat)},
    // int32 hp = 5;
    {PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_.hp_), 0, 0,
    (0 | ::_fl::kFcSingular | ::_fl::kInt32)},
  }},
  // no aux_entries
  {{
    "\40\7\0\0\0\0\0\0"
    "ingame.S2C_GameState.PlayerState"
    "user_id"
  }},
};

PROTOBUF_NOINLINE void S2C_GameState_PlayerState::Clear() {
// @@protoc_insertion_point(message_clear_start:ingame.S2C_GameState.PlayerState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.user_id_.ClearToEmpty();
  ::memset(&_impl_.x_, 0, static_cast<::size_t>(
      reinterpret_cast<char*>(&_impl_.hp_) -
      reinterpret_cast<char*>(&_impl_.x_)) + sizeof(_impl_.hp_));
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_GameState_PlayerState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_GameState_PlayerState& this_ = static_cast<const S2C_GameState_PlayerState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_GameState_PlayerState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_GameState_PlayerState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ingame.S2C_GameState.PlayerState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // string user_id = 1;
          if (!this_._internal_user_id().empty()) {
            const std::string& _s = this_._internal_user_id();
            ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                _s.data(), static_cast<int>(_s.length()), ::google::protobuf::internal::WireFormatLite::SERIALIZE, "ingame.S2C_GameState.PlayerState.user_id");
            target = stream->WriteStringMaybeAliased(1, _s, target);
          }

          // float x = 2;
          if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                2, this_._internal_x(), target);
          }

          // float y = 3;
          if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                3, this_._internal_y(), target);
          }

          // float dir = 4;
          if (::absl::bit_cast<::uint32_t>(this_._internal_dir()) != 0) {
            target = stream->EnsureSpace(target);
            target = ::_pbi::WireFormatLite::WriteFloatToArray(
                4, this_._internal_dir(), target);
          }

          // int32 hp = 5;
          if (this_._internal_hp() != 0) {
            target = ::google::protobuf::internal::WireFormatLite::
                WriteInt32ToArrayWithField<5>(
                    stream, this_._internal_hp(), target);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ingame.S2C_GameState.PlayerState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_GameState_PlayerState::ByteSizeLong(const MessageLite& base) {
          const S2C_GameState_PlayerState& this_ = static_cast<const S2C_GameState_PlayerState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_GameState_PlayerState::ByteSizeLong() const {
          const S2C_GameState_PlayerState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ingame.S2C_GameState.PlayerState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // string user_id = 1;
            if (!this_._internal_user_id().empty()) {
              total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(
                                              this_._internal_user_id());
            }
            // float x = 2;
            if (::absl::bit_cast<::uint32_t>(this_._internal_x()) != 0) {
              total_size += 5;
            }
            // float y = 3;
            if (::absl::bit_cast<::uint32_t>(this_._internal_y()) != 0) {
              total_size += 5;
            }
            // float dir = 4;
            if (::absl::bit_cast<::uint32_t>(this_._internal_dir()) != 0) {
              total_size += 5;
            }
            // int32 hp = 5;
            if (this_._internal_hp() != 0) {
              total_size += ::_pbi::WireFormatLite::Int32SizePlusOne(
                  this_._internal_hp());
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_GameState_PlayerState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_GameState_PlayerState*>(&to_msg);
  auto& from = static_cast<const S2C_GameState_PlayerState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ingame.S2C_GameState.PlayerState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (!from._internal_user_id().empty()) {
    _this->_internal_set_user_id(from._internal_user_id());
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_x()) != 0) {
    _this->_impl_.x_ = from._impl_.x_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_y()) != 0) {
    _this->_impl_.y_ = from._impl_.y_;
  }
  if (::absl::bit_cast<::uint32_t>(from._internal_dir()) != 0) {
    _this->_impl_.dir_ = from._impl_.dir_;
  }
  if (from._internal_hp() != 0) {
    _this->_impl_.hp_ = from._impl_.hp_;
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_GameState_PlayerState::CopyFrom(const S2C_GameState_PlayerState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ingame.S2C_GameState.PlayerState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_GameState_PlayerState::InternalSwap(S2C_GameState_PlayerState* PROTOBUF_RESTRICT other) {
  using std::swap;
  auto* arena = GetArena();
  ABSL_DCHECK_EQ(arena, other->GetArena());
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  ::_pbi::ArenaStringPtr::InternalSwap(&_impl_.user_id_, &other->_impl_.user_id_, arena);
  ::google::protobuf::internal::memswap<
      PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_.hp_)
      + sizeof(S2C_GameState_PlayerState::_impl_.hp_)
      - PROTOBUF_FIELD_OFFSET(S2C_GameState_PlayerState, _impl_.x_)>(
          reinterpret_cast<char*>(&_impl_.x_),
          reinterpret_cast<char*>(&other->_impl_.x_));
}

::google::protobuf::Metadata S2C_GameState_PlayerState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// ===================================================================

class S2C_GameState::_Internal {
 public:
};

S2C_GameState::S2C_GameState(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:ingame.S2C_GameState)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::ingame::S2C_GameState& from_msg)
      : players_{visibility, arena, from.players_},
        _cached_size_{0} {}

S2C_GameState::S2C_GameState(
    ::google::protobuf::Arena* arena,
    const S2C_GameState& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  S2C_GameState* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);

  // @@protoc_insertion_point(copy_constructor:ingame.S2C_GameState)
}
inline PROTOBUF_NDEBUG_INLINE S2C_GameState::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : players_{visibility, arena},
        _cached_size_{0} {}

inline void S2C_GameState::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
S2C_GameState::~S2C_GameState() {
  // @@protoc_insertion_point(destructor:ingame.S2C_GameState)
  SharedDtor(*this);
}
inline void S2C_GameState::SharedDtor(MessageLite& self) {
  S2C_GameState& this_ = static_cast<S2C_GameState&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  this_._impl_.~Impl_();
}

inline void* S2C_GameState::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) S2C_GameState(arena);
}
constexpr auto S2C_GameState::InternalNewImpl_() {
  constexpr auto arena_bits = ::google::protobuf::internal::EncodePlacementArenaOffsets({
      PROTOBUF_FIELD_OFFSET(S2C_GameState, _impl_.players_) +
          decltype(S2C_GameState::_impl_.players_)::
              InternalGetArenaOffset(
                  ::google::protobuf::Message::internal_visibility()),
  });
  if (arena_bits.has_value()) {
    return ::google::protobuf::internal::MessageCreator::ZeroInit(
        sizeof(S2C_GameState), alignof(S2C_GameState), *arena_bits);
  } else {
    return ::google::protobuf::internal::MessageCreator(&S2C_GameState::PlacementNew_,
                                 sizeof(S2C_GameState),
                                 alignof(S2C_GameState));
  }
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull S2C_GameState::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_S2C_GameState_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &S2C_GameState::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<S2C_GameState>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &S2C_GameState::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<S2C_GameState>(), &S2C_GameState::ByteSizeLong,
            &S2C_GameState::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(S2C_GameState, _impl_._cached_size_),
        false,
    },
    &S2C_GameState::kDescriptorMethods,
    &descriptor_table_ingame_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* S2C_GameState::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 1, 1, 0, 2> S2C_GameState::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    1, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294967294,  // skipmap
    offsetof(decltype(_table_), field_entries),
    1,  // num_field_entries
    1,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::ingame::S2C_GameState>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    // repeated .ingame.S2C_GameState.PlayerState players = 1;
    {::_pbi::TcParser::FastMtR1,
     {10, 63, 0, PROTOBUF_FIELD_OFFSET(S2C_GameState, _impl_.players_)}},
  }}, {{
    65535, 65535
  }}, {{
    // repeated .ingame.S2C_GameState.PlayerState players = 1;
    {PROTOBUF_FIELD_OFFSET(S2C_GameState, _impl_.players_), 0, 0,
    (0 | ::_fl::kFcRepeated | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::ingame::S2C_GameState_PlayerState>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void S2C_GameState::Clear() {
// @@protoc_insertion_point(message_clear_start:ingame.S2C_GameState)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  _impl_.players_.Clear();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* S2C_GameState::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const S2C_GameState& this_ = static_cast<const S2C_GameState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* S2C_GameState::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const S2C_GameState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:ingame.S2C_GameState)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          // repeated .ingame.S2C_GameState.PlayerState players = 1;
          for (unsigned i = 0, n = static_cast<unsigned>(
                                   this_._internal_players_size());
               i < n; i++) {
            const auto& repfield = this_._internal_players().Get(i);
            target =
                ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                    1, repfield, repfield.GetCachedSize(),
                    target, stream);
          }

          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:ingame.S2C_GameState)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t S2C_GameState::ByteSizeLong(const MessageLite& base) {
          const S2C_GameState& this_ = static_cast<const S2C_GameState&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t S2C_GameState::ByteSizeLong() const {
          const S2C_GameState& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:ingame.S2C_GameState)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          ::_pbi::Prefetch5LinesFrom7Lines(&this_);
           {
            // repeated .ingame.S2C_GameState.PlayerState players = 1;
            {
              total_size += 1UL * this_._internal_players_size();
              for (const auto& msg : this_._internal_players()) {
                total_size += ::google::protobuf::internal::WireFormatLite::MessageSize(msg);
              }
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void S2C_GameState::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<S2C_GameState*>(&to_msg);
  auto& from = static_cast<const S2C_GameState&>(from_msg);
  // @@protoc_insertion_point(class_specific_merge_from_start:ingame.S2C_GameState)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  _this->_internal_mutable_players()->MergeFrom(
      from._internal_players());
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void S2C_GameState::CopyFrom(const S2C_GameState& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:ingame.S2C_GameState)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void S2C_GameState::InternalSwap(S2C_GameState* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  _impl_.players_.InternalSwap(&other->_impl_.players_);
}

::google::protobuf::Metadata S2C_GameState::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace ingame
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_ingame_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
