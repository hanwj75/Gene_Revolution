syntax = "proto3";

package ingame;


//클라 -> 서버 : 인게임 입장
message C2S_JoinGame{
	string user_id = 1;
	string room_id = 2;
}

//서버 -> 클라 : 인게임 입장 결과
message S2C_JoinGameResult{
	bool success = 1;
	PlayerRaceState initial_state = 2;
	GameWorldState world_state = 3; //현재 월드 상태
	string message =4;
}

//월드 상태 정보
message GameWorldState{
	int32 current_phase = 1;
	int32 phase_time_remaining = 2;
	int32 human_count = 3;
	int32 giane_count = 4;
	int32 monster_count = 5;

}


//좌표
message Vector2 {
	float x = 1;
	float y = 2;
}
//거인 기본 스탯
message GiantStats {
	float attack_speed = 1;     // 공격 속도 (기본값 + 유전자 보너스)
	float move_speed = 2;       // 이동 속도 (기본값 + 유전자 보너스)
	float attack_range = 3;     // 공격 범위 (기본값 + 유전자 보너스)
	int32 max_health = 4;       // 최대 체력 (기본값 + 유전자 보너스)
	float size = 5;             // 크기 (기본값 + 유전자 보너스)
}

//플레이어 종족 상태
message PlayerRaceState{
	string user_id = 1;
	RaceType current_race = 2;            //현재 종족 상태
	map<int32,int32> gene_inventory = 3;  //<GeneType,count> 보유한 유전자(최대치n개)
	repeated GeneType equipped_genes = 4; //장착된 유전자 (최대차 5개 정도)
	bool can_transform = 5;               //진화 가능 여부 (장착된 유전자가 정확하게 5개인 경우에만 진화 가능)
	GiantStats giant_stats = 6;           //거인 스탯(거인으로 진화한 경우에만 유효한 스탯)
	int32 current_hp = 7;                 //현재 체력
	int32 max_hp = 8;                     //최대 체력
}

//클라 -> 서버 : 거인 변환 요청
message C2S_TransformGiant {
	string user_id = 1;
}
//서버 -> 클라 : 거인 변환 결과
message S2C_TransformResult {
	string user_id = 1;
	bool success = 2;         //변환 성공 여부
	RaceType new_race = 3;    //변환 후 플레이어의 새 종족 타입
	GiantStats new_stats = 4; //변환 후 플레이어의 새 스탯 정보
	string message = 5;
}

//클라 -> 서버 : 플레이어 이동
message C2S_PlayerMove {
	string user_id = 1;
    Vector2 position = 2; // x,y 값
	float dir = 3;        //방향 (0~360)
}

//서버 -> 클라 : 플레이어 이동 브로드캐스트
message S2C_PlayerMoveNotification{
	string user_id = 1;
	Vector2 position = 2;
	float dir = 3;
}

//클라 -> 서버 : 플레이어 공격 요청 (논타겟)
message C2S_PlayerAttack {
	string user_id = 1;
	AttackType attack_type = 2;        //Enum으로 공격 타입 구분 (일반유저 or 거인)
	Vector2 attack_direction = 3;      //공격 방향 벡터 (정규화된 값)
	Vector2 attack_position = 4;       //공격 시작 위치
}

//서버 -> 클라 : 공격 결과
message S2C_PlayerAttackResult {
	string user_id = 1;
	AttackType attack_type = 2;
	Vector2 attack_position = 3;        //공격 발생 위치
	Vector2 attack_direction = 4;       //공격 방향
	float attack_range = 5;             //공격 범위
	int32 total_damage = 6;             //총 데미지
	repeated string hit_targets = 7;    //맞은 대상 ID 목록
}

//서버 -> 클라 : 피격 알림
message S2C_AttackHitNotification {
	string attacker_id =1;
	string target_id = 2;
	int32 damage = 3;
	Vector2 hit_position = 4; //피격 위치
}

//서버 -> 클라 : 사망 알림
message S2C_PlayerDeathNotification {
	string player_id = 1;
	string killer_id = 2;
	DeathType death_notification = 3; //사망 이유

}

// 서버 -> 클라 : 게임 상태 동기화 (주기적으로 전체 상태 push)
message S2C_GameState {
  message PlayerState {
    string user_id = 1;
    Vector2 position = 2;
    float direction = 3;
    int32 current_hp = 4;
	int32 max_hp = 5;
	RaceType current_race = 6; //현재 종족 정보
  }

  message MonsterState {
	string monster_id =1;
	Vector2 position = 2;
	int32 current_hp = 3;
	int32 max_hp =4;
	MonsterType monster_type =5;     //몬스터 종류 (기본필드몹, 히든유전자보유몹, 플레이어가 소환한 몬스터)
  }
  repeated PlayerState players = 1;
  repeated MonsterState monsters = 2;
  int32 phase_time_remaining = 3;    //페이즈 남은 시간
  int32 current_phase = 4;           //현재 페이즈
}



//클라 -> 서버 : 유전자 획득 알림
message C2S_GeneAcquired{
	string user_id = 1;
	GeneType gene_type = 2;
	string source = 3; // "레벨업", "몬스터 드랍", "거인 드랍"
}



//서버 -> 클라 : 유전자 획득 결과
message S2C_GeneAcquiredResult {
	string user_id = 1;
	GeneType gene_type = 2;
	int32 new_count = 3;        //해당 유전자 실시간 개수
	int32 total_gene_count = 4; //총 유전자 보유량
	bool can_transform = 5;     //진화 가능 여부 업데이트
	string message = 6;
}


//클라 -> 서버 : 유전자 장착/해제
message C2S_EquipGene {
    string user_id = 1;
    GeneType gene_type = 2;
    int32 slot_index = 3; // 0-5
    bool equip = 4;       // true: 장착, false: 해제
}

//서버 -> 클라 : 유전자 장착 결과
message S2C_GeneEquipResult {
    string user_id = 1;
    bool success = 2;
    repeated GeneType equipped_genes = 3;
	bool can_transform = 4; //진화 가능 여부 다시체크 (유전자를 획득하고 4개만착용한 경우에는 진화 불가)
    string message = 5;
}
//서버 -> 클라 : 왕관 획득 알림
message S2C_CrownNotification{
	string user_id = 1;         //왕관을 획득한 유저
	string giant_id = 2;        //처치당한 유저
	int32 countdown = 3;        //거인 변환까지 남은 시간
}
//서버 -> 클라 : 왕관 드롭 알림
message S2C_CrownDropNotification{
	Vector2 position = 1; //왕관 드롭 위치
	string giant_id = 2;  //처치한 거인 ID
	int32 countdown = 3;  //왕관 유효 시간
}


//클라 -> 서버 : 왕관 획득 시도
message C2S_PickupCrown {
	string user_id = 1;
	Vector2 crown_position = 2;
}

//서버 -> 클라 : 왕관 획득 결과
message S2C_CrownPickupResult{
	string user_id = 1;
	bool success = 2;
	int32 countdown = 3;
	string message = 4;
}

//서버 -> 클라 : 기여도 업데이트
message S2C_DamageContribution{
	string user_id = 1;
	string giant_id = 2;          //공격 대상(거인)
	int32 damage_dealt = 3;       //가한 데미지
	int32 total_contribution = 4; //총 기여도
}
//서버 -> 클라 : 괴수 처치 시 기여도 결과
message S2C_GiantKillContributionResult{
	string giant_id = 1;
	message Contribution{
		string user_id = 1;
		int32 damage = 2;
		float percentage = 3; //기여도 퍼센트
	}
	repeated Contribution contributions = 2;
	string crown_winner = 3;  //왕관 획득 유저
}

//클라 -> 서버 : 히든 유전자 능력 자동 발동
message C2S_HiddenSkill{
	string user_id = 1;
	GeneType skill_type = 2;      //해당 유전자에 맞는 스킬사용
	Vector2 cursor_position = 3;  //마우스 위치
}

//서버 -> 클라 : 히든 유전자 능력 결과
message S2C_HiddenSkillResult{
	string user_id = 1;
	GeneType skill_type = 2; //해당 유전자에 맞는 스킬사용
	bool success = 3;
	string message = 4;
}

//서버 -> 클라 : 게임 종료
message S2C_GameEnd{
	message PlayerResult {
		string user_id = 1;
		string nickname = 2;     //UI표시용 닉네임
		int32 final_score = 3;   //최종 스코어
		int32 gold_earned = 4;   //획득 골드 (스코어 / n)
		RaceType final_race = 5; //최종 종족
		int32 player_killed = 6; //처치한 플레이어 수 (거인일 경우)
		int32 monster_killed = 7;//처치한 몬스터 수 (인간일 경우: 업적용)
		int32 survival_time = 8; //생존 시간 : 업적용
	}
	repeated PlayerResult results= 1;
}

//==============Enum==============

//플레이어 종족 상태 (인간 OR 거인)
enum RaceType {
	RACE_UNKNOWN = 0;
	RACE_HUMAN = 1;          //인간 상태
	RACE_ATTACK_GIANT = 2;   //공격 특화 거인
    RACE_SPEED_GIANT = 3;    //속도 특화 거인
	RACE_RANGE_GIANT = 4;    //공격범위 특화 거인
	RACE_HEALTH_GIANT = 5;   //체력 특화 거인
	RACE_SIZE_GIANT = 6;     //크기 특화 거인
	RACE_NOT_HUMAN = 7;      //거인은 아니지만 거인판정으로 인간한테 공격받는 인간(왕관 획득시 10초간 이 상태)
}

//유전자 타입 (일반 5개 히든 5개 예시)
enum GeneType {
	UNKNOWN_GENE = 0;
	//기본 유전자
	NORMAL_ATTACK_SPEED_GENE = 1; //공격속도
	NORMAL_MOVE_SPEED_GENE = 2;   //이동속도
	NORMAL_ATTACK_RANGE_GENE = 3; //공격범위
	NORMAL_HEALTH_GENE = 4;       //체력증가
	NORMAL_SIZE_GENE = 5;         //거인 크기 증가
	//히든 유전자
	HIDDEN_SWORD_GENE = 6;        //검기사용
	HIDDEN_SHIELD_GENE = 7;       //실드생성
	HIDDEN_REGENERATION_GENE = 8; //체력재생
	HIDDEN_SUMMONER_GENE = 9;     //몬스터 소환
	HIDDEN_FLASH_GENE = 10;       //점멸
}

//플레이어 공격 타입
enum AttackType {
    UNKNOWN_ATTACK = 0;
    NORMAL_ATTACK = 1;    // 일반 유저 공격
    GIANT_ATTACK = 2;     // 거인 공격
}

//몬스터 타입
enum MonsterType{
	NONE_MONSTER = 0;
	NORMAL_MONSTER = 1;
	HIDDEN_MONSTER = 2;
	SUMMONER_MONSTER = 3;
}

//사망 타입
enum DeathType{
	DEATH_UNKNOWN = 0;
	DEATH_BY_HUMAN = 1;   //인간한테 죽을경우
	DEATH_BY_MONSTER = 2; //AI한테 죽을 경우
	DEATH_BY_GIANT = 3;   //거인한테 죽을 경우
}

