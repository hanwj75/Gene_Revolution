// Generated by the protocol buffer compiler.  DO NOT EDIT!
// NO CHECKED-IN PROTOBUF GENCODE
// source: center.proto
// Protobuf C++ Version: 5.29.5

#include "center.pb.h"

#include <algorithm>
#include <type_traits>
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/generated_message_tctable_impl.h"
#include "google/protobuf/extension_set.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/wire_format_lite.h"
#include "google/protobuf/descriptor.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/reflection_ops.h"
#include "google/protobuf/wire_format.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"
PROTOBUF_PRAGMA_INIT_SEG
namespace _pb = ::google::protobuf;
namespace _pbi = ::google::protobuf::internal;
namespace _fl = ::google::protobuf::internal::field_layout;
namespace center {

inline constexpr GamePacket::Impl_::Impl_(
    ::_pbi::ConstantInitialized) noexcept
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

template <typename>
PROTOBUF_CONSTEXPR GamePacket::GamePacket(::_pbi::ConstantInitialized)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(_class_data_.base()),
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(),
#endif  // PROTOBUF_CUSTOM_VTABLE
      _impl_(::_pbi::ConstantInitialized()) {
}
struct GamePacketDefaultTypeInternal {
  PROTOBUF_CONSTEXPR GamePacketDefaultTypeInternal() : _instance(::_pbi::ConstantInitialized{}) {}
  ~GamePacketDefaultTypeInternal() {}
  union {
    GamePacket _instance;
  };
};

PROTOBUF_ATTRIBUTE_NO_DESTROY PROTOBUF_CONSTINIT
    PROTOBUF_ATTRIBUTE_INIT_PRIORITY1 GamePacketDefaultTypeInternal _GamePacket_default_instance_;
}  // namespace center
static constexpr const ::_pb::EnumDescriptor**
    file_level_enum_descriptors_center_2eproto = nullptr;
static constexpr const ::_pb::ServiceDescriptor**
    file_level_service_descriptors_center_2eproto = nullptr;
const ::uint32_t
    TableStruct_center_2eproto::offsets[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
        protodesc_cold) = {
        ~0u,  // no _has_bits_
        PROTOBUF_FIELD_OFFSET(::center::GamePacket, _internal_metadata_),
        ~0u,  // no _extensions_
        PROTOBUF_FIELD_OFFSET(::center::GamePacket, _impl_._oneof_case_[0]),
        ~0u,  // no _weak_field_map_
        ~0u,  // no _inlined_string_donated_
        ~0u,  // no _split_
        ~0u,  // no sizeof(Split)
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        ::_pbi::kInvalidFieldOffsetTag,
        PROTOBUF_FIELD_OFFSET(::center::GamePacket, _impl_.payload_),
};

static const ::_pbi::MigrationSchema
    schemas[] ABSL_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, -1, -1, sizeof(::center::GamePacket)},
};
static const ::_pb::Message* const file_default_instances[] = {
    &::center::_GamePacket_default_instance_._instance,
};
const char descriptor_table_protodef_center_2eproto[] ABSL_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    "\n\014center.proto\022\006center\032\nauth.proto\032\013lobb"
    "y.proto\032\014ingame.proto\"\373\003\n\nGamePacket\022$\n\t"
    "c2s_login\030\001 \001(\0132\017.auth.C2S_LoginH\000\022$\n\ts2"
    "c_login\030\002 \001(\0132\017.auth.S2C_LoginH\000\0220\n\017c2s_"
    "enter_lobby\030\003 \001(\0132\025.lobby.C2S_EnterLobby"
    "H\000\0220\n\017s2c_enter_lobby\030\004 \001(\0132\025.lobby.S2C_"
    "EnterLobbyH\000\022.\n\016c2s_game_start\030\005 \001(\0132\024.l"
    "obby.C2S_GameStartH\000\022.\n\016s2c_game_start\030\006"
    " \001(\0132\024.lobby.S2C_GameStartH\000\0221\n\017c2s_play"
    "er_move\030\007 \001(\0132\026.ingame.C2S_PlayerMoveH\000\022"
    "1\n\017s2c_player_move\030\010 \001(\0132\026.ingame.S2C_Pl"
    "ayerMoveH\000\0225\n\021c2s_player_attack\030\t \001(\0132\030."
    "ingame.C2S_PlayerAttackH\000\0225\n\021s2c_player_"
    "attack\030\n \001(\0132\030.ingame.S2C_PlayerAttackH\000"
    "B\t\n\007payloadb\006proto3"
};
static const ::_pbi::DescriptorTable* const descriptor_table_center_2eproto_deps[3] =
    {
        &::descriptor_table_auth_2eproto,
        &::descriptor_table_ingame_2eproto,
        &::descriptor_table_lobby_2eproto,
};
static ::absl::once_flag descriptor_table_center_2eproto_once;
PROTOBUF_CONSTINIT const ::_pbi::DescriptorTable descriptor_table_center_2eproto = {
    false,
    false,
    579,
    descriptor_table_protodef_center_2eproto,
    "center.proto",
    &descriptor_table_center_2eproto_once,
    descriptor_table_center_2eproto_deps,
    3,
    1,
    schemas,
    file_default_instances,
    TableStruct_center_2eproto::offsets,
    file_level_enum_descriptors_center_2eproto,
    file_level_service_descriptors_center_2eproto,
};
namespace center {
// ===================================================================

class GamePacket::_Internal {
 public:
  static constexpr ::int32_t kOneofCaseOffset =
      PROTOBUF_FIELD_OFFSET(::center::GamePacket, _impl_._oneof_case_);
};

void GamePacket::set_allocated_c2s_login(::auth::C2S_Login* c2s_login) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (c2s_login) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(c2s_login)->GetArena();
    if (message_arena != submessage_arena) {
      c2s_login = ::google::protobuf::internal::GetOwnedMessage(message_arena, c2s_login, submessage_arena);
    }
    set_has_c2s_login();
    _impl_.payload_.c2s_login_ = c2s_login;
  }
  // @@protoc_insertion_point(field_set_allocated:center.GamePacket.c2s_login)
}
void GamePacket::clear_c2s_login() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kC2SLogin) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.c2s_login_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.c2s_login_);
    }
    clear_has_payload();
  }
}
void GamePacket::set_allocated_s2c_login(::auth::S2C_Login* s2c_login) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (s2c_login) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(s2c_login)->GetArena();
    if (message_arena != submessage_arena) {
      s2c_login = ::google::protobuf::internal::GetOwnedMessage(message_arena, s2c_login, submessage_arena);
    }
    set_has_s2c_login();
    _impl_.payload_.s2c_login_ = s2c_login;
  }
  // @@protoc_insertion_point(field_set_allocated:center.GamePacket.s2c_login)
}
void GamePacket::clear_s2c_login() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kS2CLogin) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.s2c_login_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.s2c_login_);
    }
    clear_has_payload();
  }
}
void GamePacket::set_allocated_c2s_enter_lobby(::lobby::C2S_EnterLobby* c2s_enter_lobby) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (c2s_enter_lobby) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(c2s_enter_lobby)->GetArena();
    if (message_arena != submessage_arena) {
      c2s_enter_lobby = ::google::protobuf::internal::GetOwnedMessage(message_arena, c2s_enter_lobby, submessage_arena);
    }
    set_has_c2s_enter_lobby();
    _impl_.payload_.c2s_enter_lobby_ = c2s_enter_lobby;
  }
  // @@protoc_insertion_point(field_set_allocated:center.GamePacket.c2s_enter_lobby)
}
void GamePacket::clear_c2s_enter_lobby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kC2SEnterLobby) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.c2s_enter_lobby_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.c2s_enter_lobby_);
    }
    clear_has_payload();
  }
}
void GamePacket::set_allocated_s2c_enter_lobby(::lobby::S2C_EnterLobby* s2c_enter_lobby) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (s2c_enter_lobby) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(s2c_enter_lobby)->GetArena();
    if (message_arena != submessage_arena) {
      s2c_enter_lobby = ::google::protobuf::internal::GetOwnedMessage(message_arena, s2c_enter_lobby, submessage_arena);
    }
    set_has_s2c_enter_lobby();
    _impl_.payload_.s2c_enter_lobby_ = s2c_enter_lobby;
  }
  // @@protoc_insertion_point(field_set_allocated:center.GamePacket.s2c_enter_lobby)
}
void GamePacket::clear_s2c_enter_lobby() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kS2CEnterLobby) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.s2c_enter_lobby_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.s2c_enter_lobby_);
    }
    clear_has_payload();
  }
}
void GamePacket::set_allocated_c2s_game_start(::lobby::C2S_GameStart* c2s_game_start) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (c2s_game_start) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(c2s_game_start)->GetArena();
    if (message_arena != submessage_arena) {
      c2s_game_start = ::google::protobuf::internal::GetOwnedMessage(message_arena, c2s_game_start, submessage_arena);
    }
    set_has_c2s_game_start();
    _impl_.payload_.c2s_game_start_ = c2s_game_start;
  }
  // @@protoc_insertion_point(field_set_allocated:center.GamePacket.c2s_game_start)
}
void GamePacket::clear_c2s_game_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kC2SGameStart) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.c2s_game_start_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.c2s_game_start_);
    }
    clear_has_payload();
  }
}
void GamePacket::set_allocated_s2c_game_start(::lobby::S2C_GameStart* s2c_game_start) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (s2c_game_start) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(s2c_game_start)->GetArena();
    if (message_arena != submessage_arena) {
      s2c_game_start = ::google::protobuf::internal::GetOwnedMessage(message_arena, s2c_game_start, submessage_arena);
    }
    set_has_s2c_game_start();
    _impl_.payload_.s2c_game_start_ = s2c_game_start;
  }
  // @@protoc_insertion_point(field_set_allocated:center.GamePacket.s2c_game_start)
}
void GamePacket::clear_s2c_game_start() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kS2CGameStart) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.s2c_game_start_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.s2c_game_start_);
    }
    clear_has_payload();
  }
}
void GamePacket::set_allocated_c2s_player_move(::ingame::C2S_PlayerMove* c2s_player_move) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (c2s_player_move) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(c2s_player_move)->GetArena();
    if (message_arena != submessage_arena) {
      c2s_player_move = ::google::protobuf::internal::GetOwnedMessage(message_arena, c2s_player_move, submessage_arena);
    }
    set_has_c2s_player_move();
    _impl_.payload_.c2s_player_move_ = c2s_player_move;
  }
  // @@protoc_insertion_point(field_set_allocated:center.GamePacket.c2s_player_move)
}
void GamePacket::clear_c2s_player_move() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kC2SPlayerMove) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.c2s_player_move_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.c2s_player_move_);
    }
    clear_has_payload();
  }
}
void GamePacket::set_allocated_s2c_player_move(::ingame::S2C_PlayerMove* s2c_player_move) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (s2c_player_move) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(s2c_player_move)->GetArena();
    if (message_arena != submessage_arena) {
      s2c_player_move = ::google::protobuf::internal::GetOwnedMessage(message_arena, s2c_player_move, submessage_arena);
    }
    set_has_s2c_player_move();
    _impl_.payload_.s2c_player_move_ = s2c_player_move;
  }
  // @@protoc_insertion_point(field_set_allocated:center.GamePacket.s2c_player_move)
}
void GamePacket::clear_s2c_player_move() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kS2CPlayerMove) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.s2c_player_move_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.s2c_player_move_);
    }
    clear_has_payload();
  }
}
void GamePacket::set_allocated_c2s_player_attack(::ingame::C2S_PlayerAttack* c2s_player_attack) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (c2s_player_attack) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(c2s_player_attack)->GetArena();
    if (message_arena != submessage_arena) {
      c2s_player_attack = ::google::protobuf::internal::GetOwnedMessage(message_arena, c2s_player_attack, submessage_arena);
    }
    set_has_c2s_player_attack();
    _impl_.payload_.c2s_player_attack_ = c2s_player_attack;
  }
  // @@protoc_insertion_point(field_set_allocated:center.GamePacket.c2s_player_attack)
}
void GamePacket::clear_c2s_player_attack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kC2SPlayerAttack) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.c2s_player_attack_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.c2s_player_attack_);
    }
    clear_has_payload();
  }
}
void GamePacket::set_allocated_s2c_player_attack(::ingame::S2C_PlayerAttack* s2c_player_attack) {
  ::google::protobuf::Arena* message_arena = GetArena();
  clear_payload();
  if (s2c_player_attack) {
    ::google::protobuf::Arena* submessage_arena = reinterpret_cast<::google::protobuf::MessageLite*>(s2c_player_attack)->GetArena();
    if (message_arena != submessage_arena) {
      s2c_player_attack = ::google::protobuf::internal::GetOwnedMessage(message_arena, s2c_player_attack, submessage_arena);
    }
    set_has_s2c_player_attack();
    _impl_.payload_.s2c_player_attack_ = s2c_player_attack;
  }
  // @@protoc_insertion_point(field_set_allocated:center.GamePacket.s2c_player_attack)
}
void GamePacket::clear_s2c_player_attack() {
  ::google::protobuf::internal::TSanWrite(&_impl_);
  if (payload_case() == kS2CPlayerAttack) {
    if (GetArena() == nullptr) {
      delete _impl_.payload_.s2c_player_attack_;
    } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
      ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.s2c_player_attack_);
    }
    clear_has_payload();
  }
}
GamePacket::GamePacket(::google::protobuf::Arena* arena)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  SharedCtor(arena);
  // @@protoc_insertion_point(arena_constructor:center.GamePacket)
}
inline PROTOBUF_NDEBUG_INLINE GamePacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility, ::google::protobuf::Arena* arena,
    const Impl_& from, const ::center::GamePacket& from_msg)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{from._oneof_case_[0]} {}

GamePacket::GamePacket(
    ::google::protobuf::Arena* arena,
    const GamePacket& from)
#if defined(PROTOBUF_CUSTOM_VTABLE)
    : ::google::protobuf::Message(arena, _class_data_.base()) {
#else   // PROTOBUF_CUSTOM_VTABLE
    : ::google::protobuf::Message(arena) {
#endif  // PROTOBUF_CUSTOM_VTABLE
  GamePacket* const _this = this;
  (void)_this;
  _internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(
      from._internal_metadata_);
  new (&_impl_) Impl_(internal_visibility(), arena, from._impl_, from);
  switch (payload_case()) {
    case PAYLOAD_NOT_SET:
      break;
      case kC2SLogin:
        _impl_.payload_.c2s_login_ = ::google::protobuf::Message::CopyConstruct<::auth::C2S_Login>(arena, *from._impl_.payload_.c2s_login_);
        break;
      case kS2CLogin:
        _impl_.payload_.s2c_login_ = ::google::protobuf::Message::CopyConstruct<::auth::S2C_Login>(arena, *from._impl_.payload_.s2c_login_);
        break;
      case kC2SEnterLobby:
        _impl_.payload_.c2s_enter_lobby_ = ::google::protobuf::Message::CopyConstruct<::lobby::C2S_EnterLobby>(arena, *from._impl_.payload_.c2s_enter_lobby_);
        break;
      case kS2CEnterLobby:
        _impl_.payload_.s2c_enter_lobby_ = ::google::protobuf::Message::CopyConstruct<::lobby::S2C_EnterLobby>(arena, *from._impl_.payload_.s2c_enter_lobby_);
        break;
      case kC2SGameStart:
        _impl_.payload_.c2s_game_start_ = ::google::protobuf::Message::CopyConstruct<::lobby::C2S_GameStart>(arena, *from._impl_.payload_.c2s_game_start_);
        break;
      case kS2CGameStart:
        _impl_.payload_.s2c_game_start_ = ::google::protobuf::Message::CopyConstruct<::lobby::S2C_GameStart>(arena, *from._impl_.payload_.s2c_game_start_);
        break;
      case kC2SPlayerMove:
        _impl_.payload_.c2s_player_move_ = ::google::protobuf::Message::CopyConstruct<::ingame::C2S_PlayerMove>(arena, *from._impl_.payload_.c2s_player_move_);
        break;
      case kS2CPlayerMove:
        _impl_.payload_.s2c_player_move_ = ::google::protobuf::Message::CopyConstruct<::ingame::S2C_PlayerMove>(arena, *from._impl_.payload_.s2c_player_move_);
        break;
      case kC2SPlayerAttack:
        _impl_.payload_.c2s_player_attack_ = ::google::protobuf::Message::CopyConstruct<::ingame::C2S_PlayerAttack>(arena, *from._impl_.payload_.c2s_player_attack_);
        break;
      case kS2CPlayerAttack:
        _impl_.payload_.s2c_player_attack_ = ::google::protobuf::Message::CopyConstruct<::ingame::S2C_PlayerAttack>(arena, *from._impl_.payload_.s2c_player_attack_);
        break;
  }

  // @@protoc_insertion_point(copy_constructor:center.GamePacket)
}
inline PROTOBUF_NDEBUG_INLINE GamePacket::Impl_::Impl_(
    ::google::protobuf::internal::InternalVisibility visibility,
    ::google::protobuf::Arena* arena)
      : payload_{},
        _cached_size_{0},
        _oneof_case_{} {}

inline void GamePacket::SharedCtor(::_pb::Arena* arena) {
  new (&_impl_) Impl_(internal_visibility(), arena);
}
GamePacket::~GamePacket() {
  // @@protoc_insertion_point(destructor:center.GamePacket)
  SharedDtor(*this);
}
inline void GamePacket::SharedDtor(MessageLite& self) {
  GamePacket& this_ = static_cast<GamePacket&>(self);
  this_._internal_metadata_.Delete<::google::protobuf::UnknownFieldSet>();
  ABSL_DCHECK(this_.GetArena() == nullptr);
  if (this_.has_payload()) {
    this_.clear_payload();
  }
  this_._impl_.~Impl_();
}

void GamePacket::clear_payload() {
// @@protoc_insertion_point(one_of_clear_start:center.GamePacket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  switch (payload_case()) {
    case kC2SLogin: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.c2s_login_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.c2s_login_);
      }
      break;
    }
    case kS2CLogin: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.s2c_login_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.s2c_login_);
      }
      break;
    }
    case kC2SEnterLobby: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.c2s_enter_lobby_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.c2s_enter_lobby_);
      }
      break;
    }
    case kS2CEnterLobby: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.s2c_enter_lobby_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.s2c_enter_lobby_);
      }
      break;
    }
    case kC2SGameStart: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.c2s_game_start_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.c2s_game_start_);
      }
      break;
    }
    case kS2CGameStart: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.s2c_game_start_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.s2c_game_start_);
      }
      break;
    }
    case kC2SPlayerMove: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.c2s_player_move_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.c2s_player_move_);
      }
      break;
    }
    case kS2CPlayerMove: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.s2c_player_move_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.s2c_player_move_);
      }
      break;
    }
    case kC2SPlayerAttack: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.c2s_player_attack_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.c2s_player_attack_);
      }
      break;
    }
    case kS2CPlayerAttack: {
      if (GetArena() == nullptr) {
        delete _impl_.payload_.s2c_player_attack_;
      } else if (::google::protobuf::internal::DebugHardenClearOneofMessageOnArena()) {
        ::google::protobuf::internal::MaybePoisonAfterClear(_impl_.payload_.s2c_player_attack_);
      }
      break;
    }
    case PAYLOAD_NOT_SET: {
      break;
    }
  }
  _impl_._oneof_case_[0] = PAYLOAD_NOT_SET;
}


inline void* GamePacket::PlacementNew_(const void*, void* mem,
                                        ::google::protobuf::Arena* arena) {
  return ::new (mem) GamePacket(arena);
}
constexpr auto GamePacket::InternalNewImpl_() {
  return ::google::protobuf::internal::MessageCreator::ZeroInit(sizeof(GamePacket),
                                            alignof(GamePacket));
}
PROTOBUF_CONSTINIT
PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::google::protobuf::internal::ClassDataFull GamePacket::_class_data_ = {
    ::google::protobuf::internal::ClassData{
        &_GamePacket_default_instance_._instance,
        &_table_.header,
        nullptr,  // OnDemandRegisterArenaDtor
        nullptr,  // IsInitialized
        &GamePacket::MergeImpl,
        ::google::protobuf::Message::GetNewImpl<GamePacket>(),
#if defined(PROTOBUF_CUSTOM_VTABLE)
        &GamePacket::SharedDtor,
        ::google::protobuf::Message::GetClearImpl<GamePacket>(), &GamePacket::ByteSizeLong,
            &GamePacket::_InternalSerialize,
#endif  // PROTOBUF_CUSTOM_VTABLE
        PROTOBUF_FIELD_OFFSET(GamePacket, _impl_._cached_size_),
        false,
    },
    &GamePacket::kDescriptorMethods,
    &descriptor_table_center_2eproto,
    nullptr,  // tracker
};
const ::google::protobuf::internal::ClassData* GamePacket::GetClassData() const {
  ::google::protobuf::internal::PrefetchToLocalCache(&_class_data_);
  ::google::protobuf::internal::PrefetchToLocalCache(_class_data_.tc_table);
  return _class_data_.base();
}
PROTOBUF_CONSTINIT PROTOBUF_ATTRIBUTE_INIT_PRIORITY1
const ::_pbi::TcParseTable<0, 10, 10, 0, 2> GamePacket::_table_ = {
  {
    0,  // no _has_bits_
    0, // no _extensions_
    10, 0,  // max_field_number, fast_idx_mask
    offsetof(decltype(_table_), field_lookup_table),
    4294966272,  // skipmap
    offsetof(decltype(_table_), field_entries),
    10,  // num_field_entries
    10,  // num_aux_entries
    offsetof(decltype(_table_), aux_entries),
    _class_data_.base(),
    nullptr,  // post_loop_handler
    ::_pbi::TcParser::GenericFallback,  // fallback
    #ifdef PROTOBUF_PREFETCH_PARSE_TABLE
    ::_pbi::TcParser::GetTable<::center::GamePacket>(),  // to_prefetch
    #endif  // PROTOBUF_PREFETCH_PARSE_TABLE
  }, {{
    {::_pbi::TcParser::MiniParse, {}},
  }}, {{
    65535, 65535
  }}, {{
    // .auth.C2S_Login c2s_login = 1;
    {PROTOBUF_FIELD_OFFSET(GamePacket, _impl_.payload_.c2s_login_), _Internal::kOneofCaseOffset + 0, 0,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .auth.S2C_Login s2c_login = 2;
    {PROTOBUF_FIELD_OFFSET(GamePacket, _impl_.payload_.s2c_login_), _Internal::kOneofCaseOffset + 0, 1,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lobby.C2S_EnterLobby c2s_enter_lobby = 3;
    {PROTOBUF_FIELD_OFFSET(GamePacket, _impl_.payload_.c2s_enter_lobby_), _Internal::kOneofCaseOffset + 0, 2,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lobby.S2C_EnterLobby s2c_enter_lobby = 4;
    {PROTOBUF_FIELD_OFFSET(GamePacket, _impl_.payload_.s2c_enter_lobby_), _Internal::kOneofCaseOffset + 0, 3,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lobby.C2S_GameStart c2s_game_start = 5;
    {PROTOBUF_FIELD_OFFSET(GamePacket, _impl_.payload_.c2s_game_start_), _Internal::kOneofCaseOffset + 0, 4,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .lobby.S2C_GameStart s2c_game_start = 6;
    {PROTOBUF_FIELD_OFFSET(GamePacket, _impl_.payload_.s2c_game_start_), _Internal::kOneofCaseOffset + 0, 5,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ingame.C2S_PlayerMove c2s_player_move = 7;
    {PROTOBUF_FIELD_OFFSET(GamePacket, _impl_.payload_.c2s_player_move_), _Internal::kOneofCaseOffset + 0, 6,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ingame.S2C_PlayerMove s2c_player_move = 8;
    {PROTOBUF_FIELD_OFFSET(GamePacket, _impl_.payload_.s2c_player_move_), _Internal::kOneofCaseOffset + 0, 7,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ingame.C2S_PlayerAttack c2s_player_attack = 9;
    {PROTOBUF_FIELD_OFFSET(GamePacket, _impl_.payload_.c2s_player_attack_), _Internal::kOneofCaseOffset + 0, 8,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
    // .ingame.S2C_PlayerAttack s2c_player_attack = 10;
    {PROTOBUF_FIELD_OFFSET(GamePacket, _impl_.payload_.s2c_player_attack_), _Internal::kOneofCaseOffset + 0, 9,
    (0 | ::_fl::kFcOneof | ::_fl::kMessage | ::_fl::kTvTable)},
  }}, {{
    {::_pbi::TcParser::GetTable<::auth::C2S_Login>()},
    {::_pbi::TcParser::GetTable<::auth::S2C_Login>()},
    {::_pbi::TcParser::GetTable<::lobby::C2S_EnterLobby>()},
    {::_pbi::TcParser::GetTable<::lobby::S2C_EnterLobby>()},
    {::_pbi::TcParser::GetTable<::lobby::C2S_GameStart>()},
    {::_pbi::TcParser::GetTable<::lobby::S2C_GameStart>()},
    {::_pbi::TcParser::GetTable<::ingame::C2S_PlayerMove>()},
    {::_pbi::TcParser::GetTable<::ingame::S2C_PlayerMove>()},
    {::_pbi::TcParser::GetTable<::ingame::C2S_PlayerAttack>()},
    {::_pbi::TcParser::GetTable<::ingame::S2C_PlayerAttack>()},
  }}, {{
  }},
};

PROTOBUF_NOINLINE void GamePacket::Clear() {
// @@protoc_insertion_point(message_clear_start:center.GamePacket)
  ::google::protobuf::internal::TSanWrite(&_impl_);
  ::uint32_t cached_has_bits = 0;
  // Prevent compiler warnings about cached_has_bits being unused
  (void) cached_has_bits;

  clear_payload();
  _internal_metadata_.Clear<::google::protobuf::UnknownFieldSet>();
}

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::uint8_t* GamePacket::_InternalSerialize(
            const MessageLite& base, ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) {
          const GamePacket& this_ = static_cast<const GamePacket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::uint8_t* GamePacket::_InternalSerialize(
            ::uint8_t* target,
            ::google::protobuf::io::EpsCopyOutputStream* stream) const {
          const GamePacket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(serialize_to_array_start:center.GamePacket)
          ::uint32_t cached_has_bits = 0;
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            case kC2SLogin: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  1, *this_._impl_.payload_.c2s_login_, this_._impl_.payload_.c2s_login_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kS2CLogin: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  2, *this_._impl_.payload_.s2c_login_, this_._impl_.payload_.s2c_login_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kC2SEnterLobby: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  3, *this_._impl_.payload_.c2s_enter_lobby_, this_._impl_.payload_.c2s_enter_lobby_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kS2CEnterLobby: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  4, *this_._impl_.payload_.s2c_enter_lobby_, this_._impl_.payload_.s2c_enter_lobby_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kC2SGameStart: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  5, *this_._impl_.payload_.c2s_game_start_, this_._impl_.payload_.c2s_game_start_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kS2CGameStart: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  6, *this_._impl_.payload_.s2c_game_start_, this_._impl_.payload_.s2c_game_start_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kC2SPlayerMove: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  7, *this_._impl_.payload_.c2s_player_move_, this_._impl_.payload_.c2s_player_move_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kS2CPlayerMove: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  8, *this_._impl_.payload_.s2c_player_move_, this_._impl_.payload_.s2c_player_move_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kC2SPlayerAttack: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  9, *this_._impl_.payload_.c2s_player_attack_, this_._impl_.payload_.c2s_player_attack_->GetCachedSize(), target,
                  stream);
              break;
            }
            case kS2CPlayerAttack: {
              target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessage(
                  10, *this_._impl_.payload_.s2c_player_attack_, this_._impl_.payload_.s2c_player_attack_->GetCachedSize(), target,
                  stream);
              break;
            }
            default:
              break;
          }
          if (PROTOBUF_PREDICT_FALSE(this_._internal_metadata_.have_unknown_fields())) {
            target =
                ::_pbi::WireFormat::InternalSerializeUnknownFieldsToArray(
                    this_._internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance), target, stream);
          }
          // @@protoc_insertion_point(serialize_to_array_end:center.GamePacket)
          return target;
        }

#if defined(PROTOBUF_CUSTOM_VTABLE)
        ::size_t GamePacket::ByteSizeLong(const MessageLite& base) {
          const GamePacket& this_ = static_cast<const GamePacket&>(base);
#else   // PROTOBUF_CUSTOM_VTABLE
        ::size_t GamePacket::ByteSizeLong() const {
          const GamePacket& this_ = *this;
#endif  // PROTOBUF_CUSTOM_VTABLE
          // @@protoc_insertion_point(message_byte_size_start:center.GamePacket)
          ::size_t total_size = 0;

          ::uint32_t cached_has_bits = 0;
          // Prevent compiler warnings about cached_has_bits being unused
          (void)cached_has_bits;

          switch (this_.payload_case()) {
            // .auth.C2S_Login c2s_login = 1;
            case kC2SLogin: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.c2s_login_);
              break;
            }
            // .auth.S2C_Login s2c_login = 2;
            case kS2CLogin: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.s2c_login_);
              break;
            }
            // .lobby.C2S_EnterLobby c2s_enter_lobby = 3;
            case kC2SEnterLobby: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.c2s_enter_lobby_);
              break;
            }
            // .lobby.S2C_EnterLobby s2c_enter_lobby = 4;
            case kS2CEnterLobby: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.s2c_enter_lobby_);
              break;
            }
            // .lobby.C2S_GameStart c2s_game_start = 5;
            case kC2SGameStart: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.c2s_game_start_);
              break;
            }
            // .lobby.S2C_GameStart s2c_game_start = 6;
            case kS2CGameStart: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.s2c_game_start_);
              break;
            }
            // .ingame.C2S_PlayerMove c2s_player_move = 7;
            case kC2SPlayerMove: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.c2s_player_move_);
              break;
            }
            // .ingame.S2C_PlayerMove s2c_player_move = 8;
            case kS2CPlayerMove: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.s2c_player_move_);
              break;
            }
            // .ingame.C2S_PlayerAttack c2s_player_attack = 9;
            case kC2SPlayerAttack: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.c2s_player_attack_);
              break;
            }
            // .ingame.S2C_PlayerAttack s2c_player_attack = 10;
            case kS2CPlayerAttack: {
              total_size += 1 +
                            ::google::protobuf::internal::WireFormatLite::MessageSize(*this_._impl_.payload_.s2c_player_attack_);
              break;
            }
            case PAYLOAD_NOT_SET: {
              break;
            }
          }
          return this_.MaybeComputeUnknownFieldsSize(total_size,
                                                     &this_._impl_._cached_size_);
        }

void GamePacket::MergeImpl(::google::protobuf::MessageLite& to_msg, const ::google::protobuf::MessageLite& from_msg) {
  auto* const _this = static_cast<GamePacket*>(&to_msg);
  auto& from = static_cast<const GamePacket&>(from_msg);
  ::google::protobuf::Arena* arena = _this->GetArena();
  // @@protoc_insertion_point(class_specific_merge_from_start:center.GamePacket)
  ABSL_DCHECK_NE(&from, _this);
  ::uint32_t cached_has_bits = 0;
  (void) cached_has_bits;

  if (const uint32_t oneof_from_case = from._impl_._oneof_case_[0]) {
    const uint32_t oneof_to_case = _this->_impl_._oneof_case_[0];
    const bool oneof_needs_init = oneof_to_case != oneof_from_case;
    if (oneof_needs_init) {
      if (oneof_to_case != 0) {
        _this->clear_payload();
      }
      _this->_impl_._oneof_case_[0] = oneof_from_case;
    }

    switch (oneof_from_case) {
      case kC2SLogin: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.c2s_login_ =
              ::google::protobuf::Message::CopyConstruct<::auth::C2S_Login>(arena, *from._impl_.payload_.c2s_login_);
        } else {
          _this->_impl_.payload_.c2s_login_->MergeFrom(from._internal_c2s_login());
        }
        break;
      }
      case kS2CLogin: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.s2c_login_ =
              ::google::protobuf::Message::CopyConstruct<::auth::S2C_Login>(arena, *from._impl_.payload_.s2c_login_);
        } else {
          _this->_impl_.payload_.s2c_login_->MergeFrom(from._internal_s2c_login());
        }
        break;
      }
      case kC2SEnterLobby: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.c2s_enter_lobby_ =
              ::google::protobuf::Message::CopyConstruct<::lobby::C2S_EnterLobby>(arena, *from._impl_.payload_.c2s_enter_lobby_);
        } else {
          _this->_impl_.payload_.c2s_enter_lobby_->MergeFrom(from._internal_c2s_enter_lobby());
        }
        break;
      }
      case kS2CEnterLobby: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.s2c_enter_lobby_ =
              ::google::protobuf::Message::CopyConstruct<::lobby::S2C_EnterLobby>(arena, *from._impl_.payload_.s2c_enter_lobby_);
        } else {
          _this->_impl_.payload_.s2c_enter_lobby_->MergeFrom(from._internal_s2c_enter_lobby());
        }
        break;
      }
      case kC2SGameStart: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.c2s_game_start_ =
              ::google::protobuf::Message::CopyConstruct<::lobby::C2S_GameStart>(arena, *from._impl_.payload_.c2s_game_start_);
        } else {
          _this->_impl_.payload_.c2s_game_start_->MergeFrom(from._internal_c2s_game_start());
        }
        break;
      }
      case kS2CGameStart: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.s2c_game_start_ =
              ::google::protobuf::Message::CopyConstruct<::lobby::S2C_GameStart>(arena, *from._impl_.payload_.s2c_game_start_);
        } else {
          _this->_impl_.payload_.s2c_game_start_->MergeFrom(from._internal_s2c_game_start());
        }
        break;
      }
      case kC2SPlayerMove: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.c2s_player_move_ =
              ::google::protobuf::Message::CopyConstruct<::ingame::C2S_PlayerMove>(arena, *from._impl_.payload_.c2s_player_move_);
        } else {
          _this->_impl_.payload_.c2s_player_move_->MergeFrom(from._internal_c2s_player_move());
        }
        break;
      }
      case kS2CPlayerMove: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.s2c_player_move_ =
              ::google::protobuf::Message::CopyConstruct<::ingame::S2C_PlayerMove>(arena, *from._impl_.payload_.s2c_player_move_);
        } else {
          _this->_impl_.payload_.s2c_player_move_->MergeFrom(from._internal_s2c_player_move());
        }
        break;
      }
      case kC2SPlayerAttack: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.c2s_player_attack_ =
              ::google::protobuf::Message::CopyConstruct<::ingame::C2S_PlayerAttack>(arena, *from._impl_.payload_.c2s_player_attack_);
        } else {
          _this->_impl_.payload_.c2s_player_attack_->MergeFrom(from._internal_c2s_player_attack());
        }
        break;
      }
      case kS2CPlayerAttack: {
        if (oneof_needs_init) {
          _this->_impl_.payload_.s2c_player_attack_ =
              ::google::protobuf::Message::CopyConstruct<::ingame::S2C_PlayerAttack>(arena, *from._impl_.payload_.s2c_player_attack_);
        } else {
          _this->_impl_.payload_.s2c_player_attack_->MergeFrom(from._internal_s2c_player_attack());
        }
        break;
      }
      case PAYLOAD_NOT_SET:
        break;
    }
  }
  _this->_internal_metadata_.MergeFrom<::google::protobuf::UnknownFieldSet>(from._internal_metadata_);
}

void GamePacket::CopyFrom(const GamePacket& from) {
// @@protoc_insertion_point(class_specific_copy_from_start:center.GamePacket)
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}


void GamePacket::InternalSwap(GamePacket* PROTOBUF_RESTRICT other) {
  using std::swap;
  _internal_metadata_.InternalSwap(&other->_internal_metadata_);
  swap(_impl_.payload_, other->_impl_.payload_);
  swap(_impl_._oneof_case_[0], other->_impl_._oneof_case_[0]);
}

::google::protobuf::Metadata GamePacket::GetMetadata() const {
  return ::google::protobuf::Message::GetMetadataImpl(GetClassData()->full());
}
// @@protoc_insertion_point(namespace_scope)
}  // namespace center
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google
// @@protoc_insertion_point(global_scope)
PROTOBUF_ATTRIBUTE_INIT_PRIORITY2 static ::std::false_type
    _static_init2_ PROTOBUF_UNUSED =
        (::_pbi::AddDescriptors(&descriptor_table_center_2eproto),
         ::std::false_type{});
#include "google/protobuf/port_undef.inc"
